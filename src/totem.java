
import java.awt.Image;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
//import javax.net.ssl.HttpsURLConnection;
import java.net.HttpURLConnection;
import javax.imageio.ImageIO;
import org.json.JSONArray;
import org.json.JSONObject;
import javax.swing.*;

import org.json.JSONException;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author alvaro.carvalho
 */
public class totem extends javax.swing.JFrame {

    private String unidadesel;

    /**
     * Creates new form totem
     */
    public totem() throws IOException {
        initComponents();
        JFrame frame = new JFrame();
        this.setResizable(false);
        this.setTitle("TOTEM - De Atendimento");
        this.setSize(815, 555);
        this.setIconImage(ImageIO.read(new File("C:\\Users\\alvaro.carvalho\\Desktop\\totem2\\src\\printer.png")));

        frame.setUndecorated(true);
        JButton b = new JButton("Fechar");

    }

    private void imprimirEpson() {

    }

    //buscar senha de um api. imaginando que existe um painel de senha do outro lado, api criada  em node.js.
    //fazendo uma requisião do verbo post. solicitando uma nova senha para entrar na lista do painel de chamada.
    private static String sendPost() throws Exception {

        String url = "http://domain:8088/api/public/totem";
        String senha = "";
        URL obj = new URL(url);

        URL urlForGetRequest = new URL(url);
        String readLine = null;
        HttpURLConnection conection = (HttpURLConnection) urlForGetRequest.openConnection();
        conection.setRequestMethod("POST");
        conection.setRequestProperty("userId", "a1bcdef"); // set userId its a sample here
        String authorization = "";
        authorization = "Bearer 123456";
        conection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
        conection.setRequestProperty("Authorization", authorization);
        int responseCode = conection.getResponseCode();
        if (responseCode == HttpURLConnection.HTTP_OK) {
            BufferedReader in = new BufferedReader(
                    new InputStreamReader(conection.getInputStream()));
            StringBuffer response = new StringBuffer();
            while ((readLine = in.readLine()) != null) {
                response.append(readLine);
            }
            in.close();

            JSONObject json = new JSONObject(response.toString()); // Convert text to object
            senha = json.getString("senha");
            System.out.println(json.getString("senha"));

        } else {
            //System.out.println("GET NOT WORKED");
            String mensagem = "";
            mensagem = "<html><strong>Ops</strong>" + "<br/>" + "<i>Servidor para gerar a senha está fora do ar !</html>";
            JOptionPane.showMessageDialog(null, mensagem);
            senha = "0";

        }

        return senha;

    }

    /*
                char ESC = (char) 27;
                String centro_text = ESC + "97" +  "1" ;
                ps.print(centro_text);
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jButton1 = new javax.swing.JButton();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 204, 204));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tl.png"))); // NOI18N
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setName(""); // NOI18N
        jButton1.setNextFocusableComponent(this);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 814, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        
        File file = new File("dir:\\config.txt");

        BufferedReader br = null;
        try {
            br = new BufferedReader(new FileReader(file));
        } catch (FileNotFoundException ex) {
             Logger.getLogger(totem.class.getName()).log(Level.SEVERE, null, ex);
        }

        String st;
        try {
            System.out.println(br.readLine());
        } catch (IOException ex) {
            Logger.getLogger(totem.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            while ((st = br.readLine()) != null)
            System.out.println(st);

        } catch (IOException ex) {
            Logger.getLogger(totem.class.getName()).log(Level.SEVERE, null, ex);
        } 
        try {
            //VALOR 23 ENGESSADO, CASO QUERIA BUSCAR DE ALGUMA API. PODE DESCOMENTAR 'SENDPOST'.
            String novasenha = this.sendPost(); //BUSCAR ATRAVÉS DA API CASO SEJA NECESSÁRIO;
            //String novasenha = "23"; //this.sendPost() BUSCAR ATRAVÉS DA API CASO SEJA NECESSÁRIO;

            FileOutputStream fos;
            try {
                fos = new FileOutputStream("//domain/EPSON TM-T20 Receipt");
                //fos = new FileOutputStream("USB-001");
                //fos = new FileOutputStream("USB001:POS-58");
                //nomeCompartilhamento
                // Abre o Stream da impressora
                PrintStream ps = new PrintStream(fos);
                //ps.print("\t\t\t");                

                //fonte
                char GS = (char) 29;
                String fontb = GS + "!" + "5";
                ps.print(fontb);

                char ESC = (char) 27;
                char[] centro_text = {(char) 27, (char) 97, (char) 1};
                ps.print(centro_text);
                //gerar nova senha
                ps.print(novasenha);
                char[] p = {(char) 0x1B, (char) 0x21, (char) 0x10};
                ps.print(p);
                //avança folha
                char[] v = {(char) 10, (char) 10, (char) 10, (char) 10, (char) 10, (char) 10};
                ps.print(v);
                //corte de guilhotina
                char[] c = {(char) 29, (char) 86, (char) 1};
                ps.print(c);
                fos.close();
            } catch (FileNotFoundException ex) {
                //Logger.getLogger(JavaFXSwingApplication3.class.getName()).log(Level.SEVERE, null, ex);
                String mensagem = "";
                mensagem = "<html><strong>Ops</strong>" + "<br/>" + "<i>Infelizmente não conseguimos realizar conecxão com a impressora !<br/> SENHA GERADA : " + novasenha + " </i><br/> entre em contato com suporte técnico !</html>";
                JOptionPane.showMessageDialog(null, mensagem);
            } catch (IOException ex) {
                // Logger.getLogger(JavaFXSwingApplication3.class.getName()).log(Level.SEVERE, null, ex);
                String mensagem = "";
                mensagem = "<html><strong>Ops</strong>" + "<br/>" + "<i>Infelizmente não conseguimos gerar a senha. ! </i><br/> entre em contato com suporte técnico !</html>";
                JOptionPane.showMessageDialog(null, mensagem);
            }

        } catch (Exception ex) {

            String mensagem = "";
            mensagem = "<html><strong>Ops</strong>" + "<br/>" + "<i>Infelizmente não conseguimos realizar conecxão com servidor de senha ! </i><br/> tente novamente mais tarde !</html>";
            JOptionPane.showMessageDialog(null, mensagem);
            //Logger.getLogger(totem.class.getName()).log(Level.SEVERE, null, ex);

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(totem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(totem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(totem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(totem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {

// try {;; new totem().setVisible(true);  new config().setVisible(true);System.out.println("teste");} catch (IOException ex) {   Logger.getLogger(totem.class.getName()).log(Level.SEVERE, null, ex); }
                try {

                    new totem().setVisible(true);

                } catch (IOException ex) {
                    Logger.getLogger(totem.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JDialog jDialog1;
    // End of variables declaration//GEN-END:variables

    private void setIconImage(String src) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
